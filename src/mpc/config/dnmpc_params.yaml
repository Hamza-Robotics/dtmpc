#QP solver to be used in the NLP solver. String in  
QP_solver: 'PARTIAL_CONDENSING_HPIPM'
nlp_solver_type : 'SQP'
cython_solver: False #[BOOL]
obstacle:  False  #[BOOL]
Number_obstacles: 1 #[INT]
print_acados_status: True #[BOOL]
integrator_type: 'ERK'  #'ERK', 'IRK', 'GNSF', 'DISCRETE', 'LIFTED_IRK'
nlp_solver_max_iter: 15 #[INT]
cost_type: "LINEAR_LS"

# MPC parameters
Update_Frequency: 1 #Â¤[Hz]
Prediction_Frequency: 10 #[hz]
Prediction_Length: 10 #[s]

### Input constraints 
velocity_max: 3.5 #  [m/s]
velocity_min: -3.5 # [m/s]
angle_velocity_max: 60.  # [degrees/s]
angle_velocity_min: -60. # [degrees/s]

### Error constraints
ed_min: 0.1 # [m]
ed_max: 10.54 # [m]
eo_min: -0.3 # [rad]
eo_max: 0.3 # [rad]



# Slack variables
L2_Norm: 1.e+5
L1_Norm: 1.e+5

# Weighting matrices
#Q_matrix:  [1.e-6,1.e-6, 0,0,0]
#Q_matrix_e:  [1.e-0,1.e-0, 0,0,0]
#Q_matrix_waypoint: [1.e-5,1.e-5, 0,0,0]
#Q_matrix:          [1.e-5, 1.e-5,0,0,0,]

#Q_matrix:          [1.e+4,1.e+4,0, 1.e+1,1.e+1]
#Q_matrix_e:        [1.e+4,1.e+4,0, 1.e+1,1.e+1]
Q_matrix:          [1.e+4,1.e+1]
Q_matrix_e:        [1.e+4,1.e+1]

#Q_matrix_waypoint: [0, 0]
R_matrix:  [1.e-9,1.e-9]